-
  I create an audit rule on partner addresses
-
  !record {model: audit.rule, id: rule_partner_addresses}:
    name: Audit rule on parter addresses
    model_id: base.model_res_partner_address
-
  I add partner manager group to demo user
-
  !python {model: res.users}: |
    self.write(cr, uid, ref('base.user_demo'), {'groups_id': [(4, ref('base.group_partner_manager'))]}, context)
-
  As demo user, I create an address for ASUStek
-
  !record {model: res.partner.address, id: res_partner_address_test, uid: base.user_demo, view: False}:
    name: Test 1
    partner_id: base.res_partner_asus
    type: default
    company_id: base.main_company
-
  I check if an audit log is created after creation
-
  !python {model: audit.log}: |
    domain = [
      ('user_id', '=', ref('base.user_demo')),
      ('model_id', '=', ref('base.model_res_partner_address')),
      ('method', '=', 'create'),
      ('res_id', '=', ref('res_partner_address_test')),
    ]
    assert self.search(cr, uid, domain, limit=1, context=context), 'No audit log after user creation'
-
  As demo user, I update contact name
-
  !record {model: res.partner.address, id: res_partner_address_test, uid: base.user_demo, view: False}:
    name: Test 2
-
  I check if an audit log is created after update
-
  !python {model: audit.log}: |
    domain = [
      ('user_id', '=', ref('base.user_demo')),
      ('model_id', '=', ref('base.model_res_partner_address')),
      ('method', '=', 'write'),
      ('res_id', '=', ref('res_partner_address_test')),
    ]
    assert self.search(cr, uid, domain, limit=1, context=context), 'No audit log after user update'
-
  As demo user, I delete this address
-
  !python {model: res.partner.address, uid: base.user_demo}: |
    self.unlink(cr, uid, [ref('res_partner_address_test')], context)
-
  I check if an audit log is created after deletion
-
  !python {model: audit.log}: |
    domain = [
      ('user_id', '=', ref('base.user_demo')),
      ('model_id', '=', ref('base.model_res_partner_address')),
      ('method', '=', 'unlink'),
      ('res_id', '=', ref('res_partner_address_test')),
    ]
    assert self.search(cr, uid, domain, limit=1, context=context), 'No audit log after user deletion'

